#include "Txlib.h"
 //{
 /*!
 //========================================================================================================================================================================================================================
 @file KirLib.h

 @brief Библиотека KirLib
         $Version: Beta 1.13
         $Date: 2020 - 07 - 12
         KirLib это помощь будующим пользоателям TxLib,в которой представлены
         некоторые картинки. Кирилл Венгеров 8 "В" класс школы №192.

 @warning   Это моя первая работа такого формата,поэтому,ПОЖАЛУЙСТА,не судите строго.
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 @defgroup Drawing Рисование
*/
//}

// Функции

//{       Drawing
//! @name Рисование фигур
//=========================================================================================================================================================================================================================
 //! @{
 //*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*
 //! @ingroup Drawing
//! @brief Рисование чего-то похожего на пистолет.
//!
//! @param    x - координата по оси "x" на холсте.
//! @param    y - координата по оси "y" на холсте.
//! @param    z - рисование выстрела пистолета.
//! @warning   Координата z должна быть равна 1 или 0!
//! @param    scale - Размер персонажа.
//! @param    color - Цвет.
//!
//! @code
//!             gun      ( 750,650,  1,RGB (  0,  0,  0),1);
//!
//! @endcode
//}*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*
void gun      (int x, int y, double scale,COLORREF color,int z);

 //! @{
 //*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*
 //! @ingroup Drawing
//! @brief Рисование целющегося человечка.
//!
//! @param    x - координата по оси "x" на холсте.
//! @param    y - координата по оси "y" на холсте.
//! @param    scale - Размер персонажа.
//! @param    color - Цвет.
//!
//! @code
//!             littleman( 150,500,  1,RGB (128,  0,  0)  );
//!
//! @endcode
//}*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*
void littleman(int x, int y, double scale,COLORREF color);

//! @{
 //*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*
 //! @ingroup Drawing
//! @brief Рисование замкА.
//!
//! @param    x - координата по оси "x" на холсте.
//! @param    y - координата по оси "y" на холсте.
//! @param    scale - Размер персонажа.
//! @param    color - Цвет.
//!
//! @code
//!             lock     ( 400,550,  1,RGB (255,128,255)  );
//!
//! @endcode
//}*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*
void lock     (int x, int y, double scale,COLORREF color);

/// @name Рисование деревьев
//! @{
 //*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*
 //! @ingroup Drawing
//! @brief Рисование самого банального дерева.
//!
//! @param    x - координата по оси "x" на холсте.
//! @param    y - координата по оси "y" на холсте.
//! @param    scale - Размер персонажа.
//! @param    color - Цвет листвы.
//!
//! @code
//!             wood     ( 200,200,  1,RGB (  0,  0,  0)  );
//!
//! @endcode
//}*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*
void wood     (int x, int y, double scale,COLORREF color);


 //*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*
 //! @ingroup Drawing
//! @brief Рисование двери.
//!
//! @param    x - координата по оси "x" на холсте.
//! @param    y - координата по оси "y" на холсте.
//! @param    scale - Размер персонажа.
//! @param    color - Цвет .
//!
//! @code
//!             door     ( 500,100,  1,RGB (128,  0,  0)  );
//!
//! @endcode
//*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_**_*
void door     (int x, int y, double scale,COLORREF color);

void gun(int x, int y, double scale,COLORREF color,int z)
{
    //Пистолет
    txSetColor(color,10*scale);
    POINT gun[6] = {{x,y},{x+25*scale,y-100*scale},{x+150*scale,y-100*scale},{x+150*scale,y-60*scale},{x+50*scale,y-60*scale},{x+30*scale,y}};
    txSetFillColor(color);
    txPolygon (gun, 6);
    if(z == 1)
      {
          POINT boom[7]= {{x+150*scale,y-105*scale},{x+200*scale,y-125*scale},{x+175*scale,y-100*scale},{x+250*scale,y-75*scale},{x+175*scale,y-50*scale},{x+200*scale,y-25*scale},{x+150*scale,y-55*scale}};
          txSetColor(TX_ORANGE);
          txSetFillColor(TX_YELLOW);
          txPolygon (boom, 7);
      }

}
void littleman(int x, int y, double scale,COLORREF color)
{
    //Человечек
    txSetColor(TX_BLACK,10);
    txLine(x  ,y  ,x  ,y+200*scale);
    txSetFillColor(TX_WHITE);
    txCircle(x  ,y  , 50*scale);
    txLine(x   ,y+ 75*scale,x- 50*scale,y+200*scale);
    txLine(x   ,y+ 75*scale,x+150*scale,y+ 75*scale);
    txLine(x   ,y+200*scale,x- 50*scale,y+350*scale);
    txLine(x   ,y+200*scale,x+ 50*scale,y+350*scale);
}
void lock     (int x, int y, double scale,COLORREF color)
{
    //Замок
    txSetColor(TX_GRAY,20*scale);
    txCircle(x  ,y  ,50*scale);
    txSetColor(color,20*scale);
    txSetFillColor(color);
    txRectangle(x-50*scale,y  ,x+50*scale,y+100*scale);
    txSetFillColor(TX_WHITE);
}
void wood     (int x, int y, double scale,COLORREF color)
{
    //Дерево
    txSetColor(TX_BROWN,20*scale);
    txLine(x  ,y  ,x  ,y+200*scale);
    txSetColor(TX_WHITE,1*scale);
    txSetFillColor(color);
    txCircle(x  ,y ,100*scale);
}
void door     (int x, int y, double scale,COLORREF color)
{
    //Дверь
    txSetFillColor(color);
    txSetColor(TX_BLACK,10*scale);
    txRectangle(x  ,y  ,x+100*scale,y+200*scale);
    txSetColor(TX_BLACK,5*scale);
    txSetFillColor(TX_BLACK);
    txRectangle(x+65*scale,y+102*scale,x+80*scale,y+98*scale);
}

